# Copyright [2021] [Cargill, Incorporated.] 
# SPDX-License-Identifier: Apache-2.0
filter {
  if "disable_lookup_iana_protocol_enrichment" in [tags] or "disable_lookups" in [tags] or "disable_enrichments" in [tags] {
    mutate {
      remove_tag => ["disable_lookup_iana_protocol_enrichment"]
    }
  } else {
  ### [network][transport] lookup
    if [network][iana_number] and ![network][transport] {
      translate {
        source => "[network][iana_number]"
        dictionary_path => "${LOGSTASH_HOME}/config/iana_transport.yml"
        target => "[network][transport]"
        override => "true"
        # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
        refresh_interval => 0
      }
    }
  ### [network][protocol] lookup
      if ![network][protocol] and [destination][port] { 
        if [network][transport] {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[destination][port]}/%{[network][transport]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        } else {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[destination][port]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols_port.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        }        
      }
	  if ![network][protocol] and [server][port] { 
        if [network][transport] {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[server][port]}/%{[network][transport]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        } else {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[server][port]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols_port.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        }        
      }
      if ![network][protocol] and [url][port] { 
        if [network][transport] {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[url][port]}/%{[network][transport]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        } else {
          mutate {
            add_field => { "[@metadata][proto_lookup]" => "%{[url][port]}" }
          }
		  translate {
            source => "[@metadata][proto_lookup]"
            dictionary_path => "${LOGSTASH_HOME}/config/iana_protocols_port.yml"
            target => "[network][protocol]"
            override => "true"
            # Disable refresh from disk because when we update the dictionary file, we restart logstash explicitly
            refresh_interval => 0
          }
        }        
      }	  
    }
}
